/*
 * Orange angular-swagger-ui - v0.5.4
 *
 * (C) 2015 Orange, all right reserved
 * MIT Licensed
 */
"use strict";angular.module("swaggerUiAuthorization",["swaggerUi","ui.bootstrap.modal"]).provider("swaggerUiAuth",function(){var a;this.credentials=function(b){a=b},this.$get=["$q","$uibModal",function(b,c){return{execute:function(d){var e=b.defer(),f=c.open({templateUrl:"templates/auth/modal-auth.html",controller:"SwaggerUiModalAuthCtrl",backdrop:"static",resolve:{auth:function(){return d.auth},operation:function(){return d.operation},credentials:function(){return a}}});return f.result.then(function(){},function(){}),e.resolve(!0),e.promise}}}]}).controller("SwaggerUiModalAuthCtrl",["$scope","$http","$window","operation","auth","credentials",function(a,b,c,d,e,f){function g(){a.setTab(0);var b=d.authParams||e[0];if(b){var c=f&&f[b.type];switch(b.type){case"apiKey":a.form.apiKey=b.apiKey||c&&c.apiKey;break;case"oauth2":a.form.clientId=b.clientId||c&&c.clientId,a.form.clientSecret=b.clientSecret||c&&c.clientSecret,a.form.selectedScopes=b.selectedScopes||angular.copy(b.scopes);case"basic":a.form.login=b.login||c&&c.login,a.form.password=b.password||c&&c.password}}}function h(b){a.form.apiKey?(b.apiKey=a.form.apiKey,b.valid=!0):(delete d.authParams,b.valid=!1),a.inProgress=!1,a.$close()}function i(b){""===a.form.basicLogin&&""===a.form.basicPassword?(delete d.authParams,b.valid=!1):(b.login=a.form.basicLogin,b.password=a.form.basicPassword,b.token_type="Basic",b.access_token=btoa(b.login+":"+b.password),b.valid=!0),a.inProgress=!1,a.$close()}function j(b){""===a.form.clientId&&""===a.form.clientSecret?(delete d.authParams,b.valid=!1):(b.clientId=a.form.clientId,b.clientSecret=a.form.clientSecret,n(b,"grant_type=client_credentials",b.clientId,b.clientSecret))}function k(b){o(b,"code",function(c){b.clientId=a.form.clientId,b.clientSecret=a.form.clientSecret,n(b,"grant_type=authorization_code&code="+c.code+"&redirect_uri="+c.redirectUrl,b.clientId,b.clientSecret)})}function l(b){o(b,"token",function(c){b.token_type=c.token_type,b.access_token=c.access_token,b.valid=!0,a.inProgress=!1,a.$close()})}function m(b){""===a.form.login&&""===a.form.password?(delete d.authParams,b.valid=!1):(b.login=a.form.login,b.password=a.form.password,n(b,"grant_type=password",b.login,b.password))}function n(c,d,g,h){var i=f&&f.oauth2;b({method:"POST",url:e[a.tab].tokenUrl,headers:{Authorization:"Basic "+btoa(g+":"+h),"Content-Type":"application/x-www-form-urlencoded"},data:d,params:i&&i.queryParams}).then(function(b){c.token_type=b.data.token_type,c.access_token=b.data.access_token,c.valid=!0,a.$close()})["catch"](function(b){a.inProgress=!1,a.error="failed to get oauth access token: "+(b.message||b.status)})}function o(b,d,e){var g=[],h=f&&f.oauth2,i=btoa(new Date);if(g.push("response_type="+d),!h||!h.redirectUrl)return void(a.error="No redirect URI defined");if(g.push("redirect_uri="+encodeURIComponent(h.redirectUrl)),a.form.clientId&&g.push("client_id="+encodeURIComponent(a.form.clientId)),a.form.selectedScopes){var j=[];angular.forEach(a.form.selectedScopes,function(a,b){a===!0&&j.push(b)}),g.push("scope="+encodeURIComponent(j.join(h&&h.scopeSeparator||" ")))}g.push("state="+encodeURIComponent(i)),h&&h.realm&&g.push("realm="+encodeURIComponent(h.realm)),c.redirectOauth2={state:i,redirectUrl:h.redirectUrl,flow:b.flow,callback:e,error:function(b){a.error=b.message}},c.open(b.authorizationUrl+"?"+g.join("&"))}a.form={},a.auth=e,a.error=!1,a.authorize=function(){a.inProgress=!0,a.error=!1;var b=d.authParams=e[a.tab];switch(b.type){case"apiKey":h(b);break;case"basic":i(b);break;case"oauth2":switch(b.flow){case"application":case"clientCredentials":j(b);break;case"accessCode":case"authorizationCode":k(b);break;case"implicit":l(b);break;case"password":m(b)}}},a.setTab=function(b){a.tab=b;var c=e[b];a.authByLogin="basic"===c.type||"oauth2"===c.type&&"password"===c.flow,a.authByClientId="oauth2"===c.type&&["application","clientCredentials","accessCode","implicit"].indexOf(c.flow)>-1,a.authByClientSecret=!(!a.authByClientId||"implicit"===c.flow)},a.logout=function(){var b=e[a.tab];angular.forEach(["apiKey","clientId","clientSecret","login","password","selectedScopes","token_type","access_token"],function(a){delete b[a]}),b.valid=!1},g()}]).run(["swaggerModules","swaggerUiAuth",function(a,b){a.add(a.AUTH,b,1)}]),angular.module("swaggerUiAuthorization").run(["$templateCache",function(a){a.put("templates/auth/modal-auth.html",'<div class="swagger-auth-modal"> <h2 swagger-translate="authAvailable"></h2> <ul class="list-inline"> <li ng-repeat="item in auth" ng-class="{active:tab==$index}"> <a ng-click="setTab($index)" ng-bind="item.type|swaggerTranslate"></a> </li> </ul> <form ng-if="auth[tab].valid" role="form" name="logoutForm" class="form-horizontal" ng-submit="logout()"> <div swagger-translate="authLogged"></div> <div class="form-group buttons"> <button class="btn btn-primary" type="submit" swagger-translate="authLogout"></button> </div> </form> <form ng-if="!auth[tab].valid" role="form" name="authForm" class="form-horizontal" ng-submit="authForm.$valid&&authorize()" autocomplete="off"> <div ng-if="auth[tab].type==\'apiKey\'"> <div class="form-group"> <label class="control-label col-xs-3" swagger-translate="authParamName"></label> <div class="col-xs-9"> <span class="form-control" ng-bind="auth[tab].name"></span> </div> </div> <div class="form-group"> <label class="control-label col-xs-3" swagger-translate="authParamType"></label> <div class="col-xs-9"> <span class="form-control" ng-bind="auth[tab].in"></span> </div> </div> <div class="form-group"> <label class="control-label col-xs-3" for="apiKey" swagger-translate="authParamValue"></label> <div class="col-xs-9"> <input class="form-control" id="apiKey" name="apiKey" type="text" ng-model="form.apiKey" autocomplete="off"> </div> </div> </div> <div ng-if="authByLogin"> <div class="form-group"> <label class="control-label col-xs-3" for="login" swagger-translate="authLogin"></label> <div class="col-xs-9"> <input class="form-control col-xs-9" id="login" name="login" type="text" ng-model="form.login" autocomplete="off"> </div> </div> <div class="form-group"> <label class="control-label col-xs-3" for="password" swagger-translate="authPassword"></label> <div class="col-xs-9"> <input class="form-control col-xs-9" id="password" name="password" type="password" ng-model="form.password" autocomplete="off"> </div> </div> </div> <div ng-if="authByClientId"> <p ng-if="auth[tab].scopes.length>0" swagger-translate="authOAuthDesc"></p> <div class="form-group" ng-if="auth[tab].authorizationUrl"> <label class="control-label col-xs-3" swagger-translate="authAuthorizationUrl"></label> <div class="col-xs-9"> <span class="form-control text" ng-bind="auth[tab].authorizationUrl"></span> </div> </div> <div class="form-group"> <label class="control-label col-xs-3" swagger-translate="authFlow"></label> <div class="col-xs-9"> <span class="form-control text" ng-bind="auth[tab].flow"></span> </div> </div> <div class="form-group" ng-if="auth[tab].tokenUrl"> <label class="control-label col-xs-3" swagger-translate="authTokenUrl"></label> <div class="col-xs-9"> <span class="form-control text" ng-bind="auth[tab].tokenUrl"></span> </div> </div> <div class="form-group"> <label class="control-label col-xs-3" for="clientId" swagger-translate="authClientId"></label> <div class="col-xs-9"> <input class="form-control col-xs-9" id="clientId" name="clientId" type="text" ng-model="form.clientId" autocomplete="off"> </div> </div> <div class="form-group" ng-if="authByClientSecret"> <label class="control-label col-xs-3" for="clientSecret" swagger-translate="authClientSecret"></label> <div class="col-xs-9"> <input class="form-control col-xs-9" id="clientSecret" name="clientSecret" type="text" ng-model="form.clientSecret" autocomplete="off"> </div> </div> <div ng-if="auth[tab].scopes" class="form-group"> <label class="control-label col-xs-3" swagger-translate="authScopes"></label> <div class="col-xs-9"> <div class="checkbox" ng-repeat="(name,desc) in auth[tab].scopes"> <label for="scope_{{name}}" class="control-label"> <input type="checkbox" id="scope_{{name}}" name="scope_{{name}}" ng-model="form.selectedScopes[name]"> <span ng-bind="name"></span> </label> <div class="scope-desc" ng-bind="desc"></div> </div> </div> </div> </div> <p ng-if="error" class="text-danger" ng-bind="error"></p> <div class="form-group buttons"> <button class="btn btn-default" type="button" ng-disabled="inProgress" ng-click="$close()" swagger-translate="authCancel"></button> <button class="btn btn-primary" type="submit" ng-disabled="inProgress" swagger-translate="authAuthorize"></button> </div> </form> </div>')}]);